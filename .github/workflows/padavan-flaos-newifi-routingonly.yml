name: Build FlaOS-official (customized)

on: 
  release:
    types: [published]
  push:
    tags:
    - 'v*'
  #  branches: 
  #    - master
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        if [ $KERNEL = "4.4" ] ; then
        sudo apt-get -y install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd fakeroot \
        cpio git python-docutils gettext automake autopoint texinfo build-essential help2man \
        pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget
        else
        sudo apt install autoconf autoconf-archive automake autopoint bison build-essential \
        ca-certificates cmake cpio curl doxygen fakeroot flex gawk gettext git gperf help2man \
        htop kmod libblkid-dev libc-ares-dev libcurl4-openssl-dev libdevmapper-dev libev-dev \
        libevent-dev libexif-dev libflac-dev libgmp3-dev libid3tag0-dev libjpeg-dev libkeyutils-dev \
        libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libogg-dev libsqlite3-dev libssl-dev libtool \
        libtool-bin libudev-dev libvorbis-dev libxml2-dev locales mc nano pkg-config ppp-dev \
        python3 python3-docutils texinfo unzip uuid uuid-dev vim wget xxd zlib1g-dev
        fi
    - name: Clone source code
      env:
        KERNEL: 4.4
      run: |
        if [ $KERNEL = "4.4" ] ; then
        git clone --depth=1 https://github.com/hiedaze/FlaOS.git /opt/rt-n56u
        else
        #git clone --depth=1 https://github.com/hanwckf/rt-n56u.git /opt/rt-n56u
        git clone --depth=1 https://github.com/vb1980/Padavan-KVR.git /opt/rt-n56u
        fi
        cd /opt/rt-n56u/toolchain-mipsel
        sh dl_toolchain.sh
        mkdir -p /opt/images/
    - name: Build Firmware
      env:
        TNAME: NEWIFI
        KERNEL: 4.4
      run: |
        cd /opt/rt-n56u/trunk
        if [ ! -f configs/templates/$TNAME.config ] ; then
        echo "configs/templates/$TNAME.config not found "
        exit 1
        fi
        cp -f configs/templates/$TNAME.config .config
        #sed -i 's/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=n/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y/g' .config
        ################################################################################################
        #Since the configuration functions of different models are different, delete the configuration items first. 
        #If you want to add other items yourself, you should also write and delete this item, remember! ! !
        ################################################################################################
        #SSL/HTTPS related
        sed -i '/CONFIG_FIRMWARE_INCLUDE_EAP_PEAP/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_HTTPS/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SFTP/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_DROPBEAR/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_DROPBEAR_FAST_CODE/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_OPENSSH/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_OPENVPN/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SSWAN/d' .config #StrongSwan is IPSec MultiClient
        sed -i '/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EC/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_TRANSMISSION/d' .config #Torrent Client
        sed -i '/CONFIG_FIRMWARE_INCLUDE_TRANSMISSION_WEB_CONTROL/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_ARIA/d' .config #Downloader Client, Jdownloader better :P
        sed -i '/CONFIG_FIRMWARE_INCLUDE_ARIA_WEB_CONTROL/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE/d' .config
        #Tools
        sed -i '/CONFIG_FIRMWARE_INCLUDE_CURL/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_HTOP/d' .config #task manager
        sed -i '/CONFIG_FIRMWARE_INCLUDE_NANO/d' .config #vi alternative
        sed -i '/CONFIG_FIRMWARE_INCLUDE_TCPDUMP/d' .config #tcp catch tool
        sed -i '/CONFIG_FIRMWARE_INCLUDE_IPERF3/d' .config #internal speedtest
        sed -i '/CONFIG_FIRMWARE_INCLUDE_WIREGUARD/d' .config #Wireguard
        #USB functions
        sed -i 's/CONFIG_FIRMWARE_ENABLE_EXT2=y/CONFIG_FIRMWARE_ENABLE_EXT2=n/g' .config
        sed -i 's/CONFIG_FIRMWARE_ENABLE_EXT3=y/CONFIG_FIRMWARE_ENABLE_EXT3=n/g' .config
        sed -i 's/CONFIG_FIRMWARE_ENABLE_EXT4=y/CONFIG_FIRMWARE_ENABLE_EXT4=n/g' .config
        sed -i 's/CONFIG_FIRMWARE_ENABLE_FUSE=y/CONFIG_FIRMWARE_ENABLE_FUSE=n/g' .config
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_SMBD=y/CONFIG_FIRMWARE_INCLUDE_SMBD=n/g' .config
        #Chinese stuffs
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT/d' .config #Delete SCUTCLIENT
        sed -i '/CONFIG_FIRMWARE_INCLUDE_DOGCOM/d' .config #Delete DOGCOM battery
        sed -i '/CONFIG_FIRMWARE_INCLUDE_MINIEAP/d' .config #Delete MENTOHUST related
        sed -i '/CONFIG_FIRMWARE_INCLUDE_NJIT_CLIENT/d' .config #Delete what i know nothing about it
        sed -i '/CONFIG_FIRMWARE_INCLUDE_VLMCSD/d' .config #Delete virtual KMS server
        sed -i '/CONFIG_FIRMWARE_INCLUDE_MENTOHUST/d' .config #Delete MENTOHUST
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SOCAT/d' .config #Delete Proxy related
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SRELAY/d' .config #Delete Proxy client
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS/d' .config #Delete SS plus+
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SSSERVER/d' .config #Delete SS server
        sed -i '/CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER/d' .config #Delete DNSFORWARDER
        sed -i '/CONFIG_FIRMWARE_INCLUDE_ADBYBY/d' .config #Delete adbyby plus+
        sed -i '/CONFIG_FIRMWARE_INCLUDE_FRPC/d' .config #Delete adbyby plus+
        sed -i '/CONFIG_FIRMWARE_INCLUDE_FRPS/d' .config #Delete adbyby plus+
        sed -i '/CONFIG_FIRMWARE_INCLUDE_TUNSAFE/d' .config #Delete adbyby plus+
        sed -i '/CONFIG_FIRMWARE_INCLUDE_ALIDDNS/d' .config #Delete AliDDNS
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SMARTDNS/d' .config #Delete Smart DDNS
        sed -i '/CONFIG_FIRMWARE_INCLUDE_TROJAN/d' .config #Delete Trojan- Chinese GFW bypassing tool
        #Add Vietnamese language
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_LANG_CN/CONFIG_FIRMWARE_INCLUDE_LANG_VI/g' .config
        ######################################################################
        #The following options are to define the functions you need (y=yes, n=no), and rewrite them to the .config file
        ######################################################################
        #Universal
        echo "CONFIG_FIRMWARE_INCLUDE_EAP_PEAP=y" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_HTTPS=y" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_SFTP=y" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_DROPBEAR=y" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_DROPBEAR_FAST_CODE=y" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_OPENSSH=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_OPENVPN=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_SSWAN=n" >> .config #StrongSwan is IPSec MultiClient
        echo "CONFIG_FIRMWARE_INCLUDE_OPENSSL=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_OPENSSL_EC=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_TRANSMISSION=n" >> .config #Torrent Client
        echo "CONFIG_FIRMWARE_INCLUDE_TRANSMISSION_WEB_CONTROL=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_ARIA=n" >> .config #aria2
        echo "CONFIG_FIRMWARE_INCLUDE_ARIA_WEB_CONTROL=n" >> .config
        #Tools
        echo "CONFIG_FIRMWARE_INCLUDE_CURL=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_HTOP=n" >> .config #task monitor
        echo "CONFIG_FIRMWARE_INCLUDE_NANO=n" >> .config #vi alternative
        echo "CONFIG_FIRMWARE_INCLUDE_IPERF3=n" >> .config #internal speedtest
        echo "CONFIG_FIRMWARE_INCLUDE_TCPDUMP=n" >> .config #tcp catch tool
        #hanwckf and chinese's exclusive
        echo "CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT=n" >> .config #Delete SCUTCLIENT
        echo "CONFIG_FIRMWARE_INCLUDE_DOGCOM=n" >> .config #Delete DOGCOM battery
        echo "CONFIG_FIRMWARE_INCLUDE_MINIEAP=n" >> .config #Delete MENTOHUST related
        echo "CONFIG_FIRMWARE_INCLUDE_NJIT_CLIENT=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_VLMCSD=n" >> .config #Delete virtual KMS server
        echo "CONFIG_FIRMWARE_INCLUDE_SOCAT=n" >> .config #Proxy related
        echo "CONFIG_FIRMWARE_INCLUDE_TROJAN=n" >> .config #Integrate trojan execution file  1.2M
        #Exclusive features
        echo "CONFIG_FIRMWARE_INCLUDE_ADGUARDHOME=n" >> .config #Adguard Home
        echo "CONFIG_FIRMWARE_INCLUDE_SQM=n"  >> .config #sqm Remember that SQM will affects the HWNAT Offloading Function!
        echo "CONFIG_FIRMWARE_INCLUDE_WIREGUARD=n"  >> .config #wireguard        
        echo "CONFIG_FIRMWARE_INCLUDE_ZEROTIER=y" >> .config #zerotier ~1.3M
        if [ $KERNEL = "4.4" ] ; then        
        #Default from chongshengB
        echo "CONFIG_FIRMWARE_INCLUDE_MENTOHUST=n" >> .config #MENTOHUST        
        echo "CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT=n" >> .config #SCUTCLIENT
        echo "CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS=n" >> .config #SS plus+
        echo "CONFIG_FIRMWARE_INCLUDE_SSOBFS=n" >> .config # simple-obfs
        echo "CONFIG_FIRMWARE_INCLUDE_ADBYBY=n" >> .config #adbyby plus+
        echo "CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER=n" >> .config #DNSFORWARDER
        echo "CONFIG_FIRMWARE_INCLUDE_SRELAY=n" >> .config        
        echo "CONFIG_FIRMWARE_INCLUDE_XRAY=y" >> .config #xray  ~4.5M
        echo "CONFIG_FIRMWARE_INCLUDE_V2RAY=n" >> .config #v2ray
        echo "CONFIG_FIRMWARE_INCLUDE_DDNSTO=n" >> .config #ddnsto  ~0.5M
        echo "CONFIG_FIRMWARE_INCLUDE_ALDRIVER=n" >> .config  #Aliyun Cloud Disk  ~3m
        echo "CONFIG_FIRMWARE_INCLUDE_ALIDDNS=n" >> .config #aliddns 
        else
        #k3.4 padavan
        echo "CONFIG_FIRMWARE_INCLUDE_MENTOHUST=n" >> .config #MENTOHUST
        echo "CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT=n" >> .config #SCUTCLIENT
        echo "CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS=n" >> .config #SS plus+
        echo "CONFIG_FIRMWARE_INCLUDE_SSOBFS=n" >> .config # simple-obfs obfuscation plugin
        echo "CONFIG_FIRMWARE_INCLUDE_SSSERVER=n" >> .config #SS server
        echo "CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER=n" >> .config #DNSFORWARDER
        echo "CONFIG_FIRMWARE_INCLUDE_ADBYBY=n" >> .config #adbyby plus+
        echo "CONFIG_FIRMWARE_INCLUDE_FRPC=n" >> .config #Intranet Penetration FRPC
        echo "CONFIG_FIRMWARE_INCLUDE_FRPS=n" >> .config #Intranet Penetration FRPS
        echo "CONFIG_FIRMWARE_INCLUDE_TUNSAFE=n" >> .config #TUNSAFE
        echo "CONFIG_FIRMWARE_INCLUDE_ALIDDNS=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_SMARTDNS=n" >> .config #smartdns
        echo "CONFIG_FIRMWARE_INCLUDE_SMARTDNSBIN=n" >> .config #smartdns binaries
        echo "CONFIG_FIRMWARE_INCLUDE_V2RAY=n" >> .config #Integrate the v2ray execution file (about 3.8M), if not integrated, it will be downloaded from the Internet and executed, which will not affect the normal use.
        echo "CONFIG_FIRMWARE_INCLUDE_TROJAN=n" >> .config #Integrate the trojan execution file (about 1.1M), if not integrated, it will be downloaded from the Internet and executed without affecting normal use.
        echo "CONFIG_FIRMWARE_INCLUDE_KOOLPROXY=n" >> .config #KoolProxy AD FILTER
        echo "CONFIG_FIRMWARE_INCLUDE_CADDY=n" >> .config #Caddy FileManager
        echo "CONFIG_FIRMWARE_INCLUDE_CADDYBIN=n" >> .config #Integrated caddy execution file, this file has 13M, please pay attention to the firmware size. If it is not integrated, it will be downloaded from the Internet and executed without affecting normal use.
        #echo "#CONFIG_FIRMWARE_INCLUDE_ADGUARDHOME=y" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_SRELAY=n" >> .config #Can not be integrated
        echo "CONFIG_FIRMWARE_INCLUDE_WYY=n" >> .config #Netease Cloud Unlock
        echo "CONFIG_FIRMWARE_INCLUDE_WYYBIN=n" >> .config #Netease cloud unlock GO version execution file (more than 4M) Note that the firmware is too large, it will be downloaded automatically if it is not integrated.
        #echo "CONFIG_FIRMWARE_INCLUDE_ZEROTIER=n" >> .config #zerotier ~1.3M
        fi
        #########################################################################################
        #For custom settings please add to this file lines at configs/templates/.config following the formula above.
        #For example：
        #sed -i '/CONFIG_FIRMWARE_INCLUDE_XXX/d' .config
        #echo "CONFIG_FIRMWARE_INCLUDE_XXX=y/n" >> .config
        sed -i 's/CONFIG_HW_HAS_PCI=y/CONFIG_HW_HAS_PCI=n/g' configs/boards/NEWIFI/kernel-4.4.x.config
        sed -i 's/CONFIG_PCI=y/CONFIG_PCI=n/g' configs/boards/NEWIFI/kernel-4.4.x.config
        sed -i 's/CONFIG_PCI_DOMAINS=y/CONFIG_PCI_DOMAINS=n/g' configs/boards/NEWIFI/kernel-4.4.x.config
        #sed -i 's/CONFIG_WLAN=y/CONFIG_WLAN=n/g' configs/boards/NEWIFI/kernel-4.4.x.config
        #sed -i 's/CONFIG_WL_MEDIATEK=y/CONFIG_WL_MEDIATEK=n/g' configs/boards/NEWIFI/kernel-4.4.x.config
        #sed -i 's/CONFIG_WIFI_DRIVER=y/CONFIG_WIFI_DRIVER=n/g' configs/boards/NEWIFI/kernel-4.4.x.config
        sed -i 's/mt7621-spi-32m-layout.dtsi/mt7621-spi-8m-layout.dtsi/g' linux-4.4.x/arch/mips/boot/dts/ralink/newifi.dts
        sed -i '74d;75d;76d' linux-4.4.x/arch/mips/boot/dts/ralink/newifi.dts
        #########################################################################################
        sudo ./clear_tree
        sudo ./build_firmware_modify $TNAME 0
        sudo mv -f images/*.trx /opt/images/
    - name : Upload packages
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: Padavan-packages
        path: /opt/images
